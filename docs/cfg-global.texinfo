The keys in this section affect the operations of the buildmaster globally.

@example
c['logCompressionLimit'] = 16384
c['logCompressionMethod'] = 'gz'
c['logMaxSize'] = 1024*1024 # 1M
c['logMaxTailSize'] = 32768
@end example

@bcindex c['logCompressionLimit']
The @code{logCompressionLimit} enables compression of build logs on
disk for logs that are bigger than the given size, or disables that
completely if set to @code{False}. The default value is 4k, which should
be a reasonable default on most file systems. This setting has no impact
on status plugins, and merely affects the required disk space on the
master for build logs.

@bcindex c['logCompressionMethod']
The @code{logCompressionMethod} controls what type of compression is used for
build logs.  The default is 'bz2', the other valid option is 'gz'.  'bz2'
offers better compression at the expense of more CPU time.

@bcindex c['logMaxSize']
The @code{logMaxSize} parameter sets an upper limit (in bytes) to how large
logs from an individual build step can be.  The default value is None, meaning
no upper limit to the log size.  Any output exceeding @code{logMaxSize} will be
truncated, and a message to this effect will be added to the log's HEADER
channel.

@bcindex c['logMaxTailSize']
If @code{logMaxSize} is set, and the output from a step exceeds the maximum,
the @code{logMaxTailSize} parameter controls how much of the end of the build
log will be kept.  The effect of setting this parameter is that the log will
contain the first @code{logMaxSize} bytes and the last @code{logMaxTailSize}
bytes of output.  Don't set this value too high, as the the tail of the log is
kept in memory.

@bcindex c['changeHorizon']

The @code{c['changeHorizon']} key determines how many changes the master will
keep a record of. One place these changes are displayed is on the waterfall
page.  This parameter defaults to 0, which means keep all changes indefinitely.


